#include <iostream>
#include <algorithm>

using namespace std;


void findMinSumPair(int arr[], int n) {

    sort(arr, arr + n);

    int left = 0; 
    int right = n - 1; 
    int min_sum = INT_MAX; 
    int min_left = 0; 
    int min_right = n - 1; 

    
      while(left < right) {
    
     int sum = arr[left] + arr[right];

     
        if (abs(sum) < abs(min_sum)) {
            min_sum = sum;
            min_left = left;
            min_right = right;
        }

     
        if (sum < 0) {
            left++; 
        }
        else {
            right--; 
        }
    }

    
    cout << "The pair with the minimum sum is (" << arr[min_left] << ", " << arr[min_right] << ")" << endl;
    cout << "The minimum sum is " << min_sum << endl;
}


void test() {
    // Example 1
    int arr1[] = {1, 3, -5, 7, -10, 15, -2, 8};
    int n1 = sizeof(arr1) / sizeof(arr1[0]);
    cout << "Example 1:" << endl;
    findMinSumPair(arr1, n1);
    cout << endl;

    // Example 2
    int arr2[] = {-8, -66, -60};
    int n2 = sizeof(arr2) / sizeof(arr2[0]);
    cout << "Example 2:" << endl;
    findMinSumPair(arr2, n2);
    cout << endl;

    // Example 3
    int arr3[] = {18, 40, -32};
    int n3 = sizeof(arr3) / sizeof(arr3[0]);
    cout << "Example 3:" << endl;
    findMinSumPair(arr3, n3);
}

// The main function
int main() {
    test();
    return 0;
}
